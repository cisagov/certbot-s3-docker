---
name: release

on:
  release:
    types: [prereleased, released]

env:
  IMAGE_NAME: cisagov/certboto
  DOCKER_PW: ${{ secrets.DOCKER_PW }}
  DOCKER_USER: ${{ secrets.DOCKER_USER }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Determine image version
        run: echo IMAGE_VERSION=$(./bump_version.sh show) >> $GITHUB_ENV
      - name: Build Docker image
        run: |
          version=${{ env.IMAGE_VERSION }}
          docker build \
            --tag "$IMAGE_NAME" \
            --build-arg GIT_COMMIT=$(git log -1 --format=%H) \
            --build-arg GIT_REMOTE=$(git remote get-url origin) \
            --build-arg VERSION=${{ env.IMAGE_VERSION }} \
            .
      - name: Tag Docker image
        run: |
          IFS='.' read -r -a version_array \
            <<< "${{ env.IMAGE_VERSION }}"
          docker login --username "$DOCKER_USER" --password "$DOCKER_PW"
          docker tag "$IMAGE_NAME" "${IMAGE_NAME}:latest"
          docker tag "$IMAGE_NAME" \
            "${IMAGE_NAME}:${{ env.IMAGE_VERSION }}"
          docker tag "$IMAGE_NAME" \
            "${IMAGE_NAME}:${version_array[0]}.${version_array[1]}"
          docker tag "$IMAGE_NAME" "${IMAGE_NAME}:${version_array[0]}"
      - name: Publish image to Docker Hub
        run: |
          IFS='.' read -r -a version_array \
            <<< "${{ env.IMAGE_VERSION }}"
          docker push "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:${{ env.IMAGE_VERSION }}"
          docker push "${IMAGE_NAME}:${version_array[0]}.${version_array[1]}"
          docker push "${IMAGE_NAME}:${version_array[0]}"
      - name: Publish README.md to Docker Hub
        run: ./push_readme.sh
